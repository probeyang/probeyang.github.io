<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单例模式 on Sanlt,就是加了N多盐的地方</title>
    <link>https://www.sanlt.com/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 单例模式 on Sanlt,就是加了N多盐的地方</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.sanlt.com/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式之单例模式</title>
      <link>https://www.sanlt.com/post/pattern_design/singleton/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.sanlt.com/post/pattern_design/singleton/</guid>
      <description>单例模式有两种 延迟方式 急切方式 下面我们详细介绍两种方式。 延迟方式 利用私有的构造器，只有单例类内部才可以调用构造器。 延迟方式的问题在于每次实例</description>
    </item>
    
  </channel>
</rss>